// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myFuncAccel_HH_
#define _myFuncAccel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Block_codeRepl50_pro.h"
#include "Loop_sizeLoop_proc.h"
#include "fifo_w32_d2_A.h"

namespace ap_rtl {

struct myFuncAccel : public sc_module {
    // Port declarations 36
    sc_in< sc_lv<32> > size;
    sc_in< sc_lv<32> > dim;
    sc_in< sc_lv<32> > threshold;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > data0_req_din;
    sc_in< sc_logic > data0_req_full_n;
    sc_out< sc_logic > data0_req_write;
    sc_in< sc_logic > data0_rsp_empty_n;
    sc_out< sc_logic > data0_rsp_read;
    sc_out< sc_lv<32> > data0_address;
    sc_in< sc_lv<32> > data0_datain;
    sc_out< sc_lv<32> > data0_dataout;
    sc_out< sc_lv<32> > data0_size;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > data1_req_din;
    sc_in< sc_logic > data1_req_full_n;
    sc_out< sc_logic > data1_req_write;
    sc_in< sc_logic > data1_rsp_empty_n;
    sc_out< sc_logic > data1_rsp_read;
    sc_out< sc_lv<32> > data1_address;
    sc_in< sc_lv<32> > data1_datain;
    sc_out< sc_lv<32> > data1_dataout;
    sc_out< sc_lv<32> > data1_size;
    sc_out< sc_logic > data2_req_din;
    sc_in< sc_logic > data2_req_full_n;
    sc_out< sc_logic > data2_req_write;
    sc_in< sc_logic > data2_rsp_empty_n;
    sc_out< sc_logic > data2_rsp_read;
    sc_out< sc_lv<32> > data2_address;
    sc_in< sc_lv<32> > data2_datain;
    sc_out< sc_lv<32> > data2_dataout;
    sc_out< sc_lv<32> > data2_size;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    myFuncAccel(sc_module_name name);
    SC_HAS_PROCESS(myFuncAccel);

    ~myFuncAccel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Block_codeRepl50_pro* Block_codeRepl50_pro_U0;
    Loop_sizeLoop_proc* Loop_sizeLoop_proc_U0;
    fifo_w32_d2_A* data0_load_loc_chann_U;
    fifo_w32_d2_A* data0_load_1_loc_cha_U;
    fifo_w32_d2_A* data0_load_2_loc_cha_U;
    fifo_w32_d2_A* data0_load_3_loc_cha_U;
    fifo_w32_d2_A* data0_load_4_loc_cha_U;
    fifo_w32_d2_A* data0_load_5_loc_cha_U;
    fifo_w32_d2_A* data0_load_6_loc_cha_U;
    fifo_w32_d2_A* data0_load_7_loc_cha_U;
    fifo_w32_d2_A* data0_load_8_loc_cha_U;
    fifo_w32_d2_A* data0_load_9_loc_cha_U;
    fifo_w32_d2_A* data0_load_10_loc_ch_U;
    fifo_w32_d2_A* data0_load_11_loc_ch_U;
    fifo_w32_d2_A* data0_load_12_loc_ch_U;
    fifo_w32_d2_A* data0_load_13_loc_ch_U;
    fifo_w32_d2_A* data0_load_14_loc_ch_U;
    fifo_w32_d2_A* data0_load_15_loc_ch_U;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_ap_start;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_ap_done;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_ap_continue;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_ap_idle;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_ap_ready;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_data0_req_din;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_data0_req_write;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_data0_rsp_read;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_data0_address;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_data0_dataout;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_data0_size;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_0;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_1;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_2;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_3;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_4;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_5;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_6;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_7;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_8;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_9;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_10;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_11;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_12;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_13;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_14;
    sc_signal< sc_lv<32> > Block_codeRepl50_pro_U0_ap_return_15;
    sc_signal< sc_logic > ap_channel_done_data0_load_15_loc_ch;
    sc_signal< sc_logic > data0_load_15_loc_ch_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_15_loc_ch;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_15_loc_ch;
    sc_signal< sc_logic > ap_channel_done_data0_load_14_loc_ch;
    sc_signal< sc_logic > data0_load_14_loc_ch_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_14_loc_ch;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_14_loc_ch;
    sc_signal< sc_logic > ap_channel_done_data0_load_13_loc_ch;
    sc_signal< sc_logic > data0_load_13_loc_ch_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_13_loc_ch;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_13_loc_ch;
    sc_signal< sc_logic > ap_channel_done_data0_load_12_loc_ch;
    sc_signal< sc_logic > data0_load_12_loc_ch_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_12_loc_ch;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_12_loc_ch;
    sc_signal< sc_logic > ap_channel_done_data0_load_11_loc_ch;
    sc_signal< sc_logic > data0_load_11_loc_ch_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_11_loc_ch;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_11_loc_ch;
    sc_signal< sc_logic > ap_channel_done_data0_load_10_loc_ch;
    sc_signal< sc_logic > data0_load_10_loc_ch_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_10_loc_ch;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_10_loc_ch;
    sc_signal< sc_logic > ap_channel_done_data0_load_9_loc_cha;
    sc_signal< sc_logic > data0_load_9_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_9_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_9_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_8_loc_cha;
    sc_signal< sc_logic > data0_load_8_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_8_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_8_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_7_loc_cha;
    sc_signal< sc_logic > data0_load_7_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_7_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_7_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_6_loc_cha;
    sc_signal< sc_logic > data0_load_6_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_6_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_6_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_5_loc_cha;
    sc_signal< sc_logic > data0_load_5_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_5_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_5_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_4_loc_cha;
    sc_signal< sc_logic > data0_load_4_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_4_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_4_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_3_loc_cha;
    sc_signal< sc_logic > data0_load_3_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_3_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_3_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_2_loc_cha;
    sc_signal< sc_logic > data0_load_2_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_2_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_2_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_1_loc_cha;
    sc_signal< sc_logic > data0_load_1_loc_cha_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_1_loc_cha;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_1_loc_cha;
    sc_signal< sc_logic > ap_channel_done_data0_load_loc_chann;
    sc_signal< sc_logic > data0_load_loc_chann_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_data0_load_loc_chann;
    sc_signal< sc_logic > ap_sync_channel_write_data0_load_loc_chann;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_ap_start;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_ap_done;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_ap_continue;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_ap_idle;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_ap_ready;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_data1_req_din;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_data1_req_write;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_data1_rsp_read;
    sc_signal< sc_lv<32> > Loop_sizeLoop_proc_U0_data1_address;
    sc_signal< sc_lv<32> > Loop_sizeLoop_proc_U0_data1_dataout;
    sc_signal< sc_lv<32> > Loop_sizeLoop_proc_U0_data1_size;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_data2_req_din;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_data2_req_write;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_data2_rsp_read;
    sc_signal< sc_lv<32> > Loop_sizeLoop_proc_U0_data2_address;
    sc_signal< sc_lv<32> > Loop_sizeLoop_proc_U0_data2_dataout;
    sc_signal< sc_lv<32> > Loop_sizeLoop_proc_U0_data2_size;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_lv<32> > data0_load_loc_chann_dout;
    sc_signal< sc_logic > data0_load_loc_chann_empty_n;
    sc_signal< sc_lv<32> > data0_load_1_loc_cha_dout;
    sc_signal< sc_logic > data0_load_1_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_2_loc_cha_dout;
    sc_signal< sc_logic > data0_load_2_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_3_loc_cha_dout;
    sc_signal< sc_logic > data0_load_3_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_4_loc_cha_dout;
    sc_signal< sc_logic > data0_load_4_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_5_loc_cha_dout;
    sc_signal< sc_logic > data0_load_5_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_6_loc_cha_dout;
    sc_signal< sc_logic > data0_load_6_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_7_loc_cha_dout;
    sc_signal< sc_logic > data0_load_7_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_8_loc_cha_dout;
    sc_signal< sc_logic > data0_load_8_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_9_loc_cha_dout;
    sc_signal< sc_logic > data0_load_9_loc_cha_empty_n;
    sc_signal< sc_lv<32> > data0_load_10_loc_ch_dout;
    sc_signal< sc_logic > data0_load_10_loc_ch_empty_n;
    sc_signal< sc_lv<32> > data0_load_11_loc_ch_dout;
    sc_signal< sc_logic > data0_load_11_loc_ch_empty_n;
    sc_signal< sc_lv<32> > data0_load_12_loc_ch_dout;
    sc_signal< sc_logic > data0_load_12_loc_ch_empty_n;
    sc_signal< sc_lv<32> > data0_load_13_loc_ch_dout;
    sc_signal< sc_logic > data0_load_13_loc_ch_empty_n;
    sc_signal< sc_lv<32> > data0_load_14_loc_ch_dout;
    sc_signal< sc_logic > data0_load_14_loc_ch_empty_n;
    sc_signal< sc_lv<32> > data0_load_15_loc_ch_dout;
    sc_signal< sc_logic > data0_load_15_loc_ch_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_Block_codeRepl50_pro_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_Block_codeRepl50_pro_U0_ap_ready;
    sc_signal< sc_lv<2> > Block_codeRepl50_pro_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_Loop_sizeLoop_proc_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_Loop_sizeLoop_proc_U0_ap_ready;
    sc_signal< sc_lv<2> > Loop_sizeLoop_proc_U0_ap_ready_count;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_start_full_n;
    sc_signal< sc_logic > Block_codeRepl50_pro_U0_start_write;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_start_full_n;
    sc_signal< sc_logic > Loop_sizeLoop_proc_U0_start_write;
    static const sc_lv<32> data0_BASE_ADDRESS;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> data1_BASE_ADDRESS;
    static const sc_lv<32> data2_BASE_ADDRESS;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Block_codeRepl50_pro_U0_ap_continue();
    void thread_Block_codeRepl50_pro_U0_ap_start();
    void thread_Block_codeRepl50_pro_U0_start_full_n();
    void thread_Block_codeRepl50_pro_U0_start_write();
    void thread_Loop_sizeLoop_proc_U0_ap_continue();
    void thread_Loop_sizeLoop_proc_U0_ap_start();
    void thread_Loop_sizeLoop_proc_U0_start_full_n();
    void thread_Loop_sizeLoop_proc_U0_start_write();
    void thread_ap_channel_done_data0_load_10_loc_ch();
    void thread_ap_channel_done_data0_load_11_loc_ch();
    void thread_ap_channel_done_data0_load_12_loc_ch();
    void thread_ap_channel_done_data0_load_13_loc_ch();
    void thread_ap_channel_done_data0_load_14_loc_ch();
    void thread_ap_channel_done_data0_load_15_loc_ch();
    void thread_ap_channel_done_data0_load_1_loc_cha();
    void thread_ap_channel_done_data0_load_2_loc_cha();
    void thread_ap_channel_done_data0_load_3_loc_cha();
    void thread_ap_channel_done_data0_load_4_loc_cha();
    void thread_ap_channel_done_data0_load_5_loc_cha();
    void thread_ap_channel_done_data0_load_6_loc_cha();
    void thread_ap_channel_done_data0_load_7_loc_cha();
    void thread_ap_channel_done_data0_load_8_loc_cha();
    void thread_ap_channel_done_data0_load_9_loc_cha();
    void thread_ap_channel_done_data0_load_loc_chann();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_Block_codeRepl50_pro_U0_ap_ready();
    void thread_ap_sync_Loop_sizeLoop_proc_U0_ap_ready();
    void thread_ap_sync_channel_write_data0_load_10_loc_ch();
    void thread_ap_sync_channel_write_data0_load_11_loc_ch();
    void thread_ap_sync_channel_write_data0_load_12_loc_ch();
    void thread_ap_sync_channel_write_data0_load_13_loc_ch();
    void thread_ap_sync_channel_write_data0_load_14_loc_ch();
    void thread_ap_sync_channel_write_data0_load_15_loc_ch();
    void thread_ap_sync_channel_write_data0_load_1_loc_cha();
    void thread_ap_sync_channel_write_data0_load_2_loc_cha();
    void thread_ap_sync_channel_write_data0_load_3_loc_cha();
    void thread_ap_sync_channel_write_data0_load_4_loc_cha();
    void thread_ap_sync_channel_write_data0_load_5_loc_cha();
    void thread_ap_sync_channel_write_data0_load_6_loc_cha();
    void thread_ap_sync_channel_write_data0_load_7_loc_cha();
    void thread_ap_sync_channel_write_data0_load_8_loc_cha();
    void thread_ap_sync_channel_write_data0_load_9_loc_cha();
    void thread_ap_sync_channel_write_data0_load_loc_chann();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_data0_address();
    void thread_data0_dataout();
    void thread_data0_req_din();
    void thread_data0_req_write();
    void thread_data0_rsp_read();
    void thread_data0_size();
    void thread_data1_address();
    void thread_data1_dataout();
    void thread_data1_req_din();
    void thread_data1_req_write();
    void thread_data1_rsp_read();
    void thread_data1_size();
    void thread_data2_address();
    void thread_data2_dataout();
    void thread_data2_req_din();
    void thread_data2_req_write();
    void thread_data2_rsp_read();
    void thread_data2_size();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
