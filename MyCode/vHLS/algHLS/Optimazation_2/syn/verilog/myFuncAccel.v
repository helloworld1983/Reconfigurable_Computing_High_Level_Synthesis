// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myFuncAccel,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.452000,HLS_SYN_LAT=32034,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=1438,HLS_SYN_LUT=2082,HLS_VERSION=2018_3}" *)

module myFuncAccel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        size,
        dim,
        threshold,
        data0_req_din,
        data0_req_full_n,
        data0_req_write,
        data0_rsp_empty_n,
        data0_rsp_read,
        data0_address,
        data0_datain,
        data0_dataout,
        data0_size,
        data1_req_din,
        data1_req_full_n,
        data1_req_write,
        data1_rsp_empty_n,
        data1_rsp_read,
        data1_address,
        data1_datain,
        data1_dataout,
        data1_size,
        data2_req_din,
        data2_req_full_n,
        data2_req_write,
        data2_rsp_empty_n,
        data2_rsp_read,
        data2_address,
        data2_datain,
        data2_dataout,
        data2_size
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_pp0_stage0 = 34'd2;
parameter    ap_ST_fsm_pp0_stage1 = 34'd4;
parameter    ap_ST_fsm_pp0_stage2 = 34'd8;
parameter    ap_ST_fsm_pp0_stage3 = 34'd16;
parameter    ap_ST_fsm_pp0_stage4 = 34'd32;
parameter    ap_ST_fsm_pp0_stage5 = 34'd64;
parameter    ap_ST_fsm_pp0_stage6 = 34'd128;
parameter    ap_ST_fsm_pp0_stage7 = 34'd256;
parameter    ap_ST_fsm_pp0_stage8 = 34'd512;
parameter    ap_ST_fsm_pp0_stage9 = 34'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 34'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 34'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 34'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 34'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 34'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 34'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 34'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 34'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 34'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 34'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 34'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 34'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 34'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 34'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 34'd33554432;
parameter    ap_ST_fsm_pp0_stage25 = 34'd67108864;
parameter    ap_ST_fsm_pp0_stage26 = 34'd134217728;
parameter    ap_ST_fsm_pp0_stage27 = 34'd268435456;
parameter    ap_ST_fsm_pp0_stage28 = 34'd536870912;
parameter    ap_ST_fsm_pp0_stage29 = 34'd1073741824;
parameter    ap_ST_fsm_pp0_stage30 = 34'd2147483648;
parameter    ap_ST_fsm_pp0_stage31 = 34'd4294967296;
parameter    ap_ST_fsm_state67 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] size;
input  [31:0] dim;
input  [31:0] threshold;
output   data0_req_din;
input   data0_req_full_n;
output   data0_req_write;
input   data0_rsp_empty_n;
output   data0_rsp_read;
output  [31:0] data0_address;
input  [31:0] data0_datain;
output  [31:0] data0_dataout;
output  [31:0] data0_size;
output   data1_req_din;
input   data1_req_full_n;
output   data1_req_write;
input   data1_rsp_empty_n;
output   data1_rsp_read;
output  [31:0] data1_address;
input  [31:0] data1_datain;
output  [31:0] data1_dataout;
output  [31:0] data1_size;
output   data2_req_din;
input   data2_req_full_n;
output   data2_req_write;
input   data2_rsp_empty_n;
output   data2_rsp_read;
output  [31:0] data2_address;
input  [31:0] data2_datain;
output  [31:0] data2_dataout;
output  [31:0] data2_size;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data0_req_write;
reg data0_rsp_read;
reg data1_req_write;
reg data1_rsp_read;
reg data2_req_din;
reg data2_req_write;
reg data2_rsp_read;
reg[31:0] data2_address;
reg[31:0] data2_dataout;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] i_reg_212;
reg   [11:0] count_reg_223;
reg   [31:0] reg_261;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond1_reg_678;
reg    ap_block_state5_pp0_stage3_iter0;
reg   [0:0] exitcond1_reg_678_pp0_iter1_reg;
reg    ap_block_state37_pp0_stage3_iter1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage7;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_state41_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage11;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_state45_pp0_stage11_iter1;
reg    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage15;
reg    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_state49_pp0_stage15_iter1;
reg    ap_block_pp0_stage15_11001;
reg   [31:0] reg_266;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_state38_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage8;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_state42_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage12;
reg    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_state46_pp0_stage12_iter1;
reg    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage16;
reg    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_state50_pp0_stage16_iter1;
reg    ap_block_pp0_stage16_11001;
reg   [31:0] reg_271;
wire    ap_CS_fsm_pp0_stage5;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state39_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage9;
reg    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_state43_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage13;
reg    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_state47_pp0_stage13_iter1;
reg    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage17;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_block_state51_pp0_stage17_iter1;
reg    ap_block_pp0_stage17_11001;
reg   [31:0] reg_276;
wire    ap_CS_fsm_pp0_stage6;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_state40_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage10;
reg    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_state44_pp0_stage10_iter1;
reg    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage14;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_state48_pp0_stage14_iter1;
reg    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage18;
reg    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_state52_pp0_stage18_iter1;
reg    ap_block_pp0_stage18_11001;
wire   [31:0] grp_fu_240_p2;
reg   [31:0] reg_281;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state23_pp0_stage21_iter0;
wire    ap_block_state55_pp0_stage21_iter1;
wire    ap_block_pp0_stage21_11001;
reg   [31:0] reg_287;
reg   [31:0] reg_292;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state24_pp0_stage22_iter0;
wire    ap_block_state56_pp0_stage22_iter1;
wire    ap_block_pp0_stage22_11001;
reg   [31:0] reg_297;
wire   [31:0] grp_fu_235_p2;
reg   [31:0] reg_303;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_state29_pp0_stage27_iter0;
wire    ap_block_state61_pp0_stage27_iter1;
wire    ap_block_pp0_stage27_11001;
reg   [31:0] reg_311;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state22_pp0_stage20_iter0;
reg    ap_block_state54_pp0_stage20_iter1;
reg    ap_block_pp0_stage20_11001;
reg   [31:0] reg_317;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state28_pp0_stage26_iter0;
reg    ap_block_state60_pp0_stage26_iter1;
reg    ap_block_pp0_stage26_11001;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state33_pp0_stage31_iter0;
wire    ap_block_state65_pp0_stage31_iter1;
wire    ap_block_pp0_stage31_11001;
reg   [31:0] reg_324;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state27_pp0_stage25_iter0;
wire    ap_block_state59_pp0_stage25_iter1;
wire    ap_block_pp0_stage25_11001;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state32_pp0_stage30_iter0;
wire    ap_block_state64_pp0_stage30_iter1;
wire    ap_block_pp0_stage30_11001;
reg   [31:0] reg_331;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state26_pp0_stage24_iter0;
wire    ap_block_state58_pp0_stage24_iter1;
wire    ap_block_pp0_stage24_11001;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state31_pp0_stage29_iter0;
reg    ap_block_state63_pp0_stage29_iter1;
reg    ap_block_pp0_stage29_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state36_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] exitcond1_fu_336_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state34_pp0_stage0_iter1;
reg    ap_block_state66_pp0_stage0_iter2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] i_1_fu_342_p2;
reg   [9:0] i_1_reg_682;
wire   [11:0] tmp_fu_348_p3;
reg   [11:0] tmp_reg_687;
reg   [11:0] tmp_reg_687_pp0_iter1_reg;
reg   [31:0] data2_addr_reg_695;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state35_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] data2_addr_reg_695_pp0_iter1_reg;
reg   [31:0] data1_addr_read_reg_707;
reg   [31:0] data1_addr_read_1_reg_712;
reg   [31:0] data1_addr_read_2_reg_717;
reg   [31:0] data1_addr_read_3_reg_722;
reg   [31:0] tmp_9_reg_727;
reg   [31:0] tmp_19_1_reg_732;
reg   [31:0] tmp_22_1_reg_737;
reg   [31:0] tmp_22_2_reg_742;
reg   [31:0] tmp_13_3_reg_747;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state21_pp0_stage19_iter0;
wire    ap_block_state53_pp0_stage19_iter1;
wire    ap_block_pp0_stage19_11001;
wire   [0:0] grp_fu_256_p2;
reg   [0:0] tmp_11_reg_752;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_state30_pp0_stage28_iter0;
wire    ap_block_state62_pp0_stage28_iter1;
wire    ap_block_pp0_stage28_11001;
reg   [0:0] tmp_17_reg_757;
reg   [31:0] data2_addr_1_reg_762;
reg   [31:0] data2_addr_2_reg_768;
reg   [31:0] data2_addr_3_reg_774;
reg   [0:0] tmp_22_reg_780;
wire   [0:0] tmp_29_fu_513_p2;
reg   [0:0] tmp_29_reg_785;
wire   [12:0] tmp_25_1_fu_540_p2;
reg   [12:0] tmp_25_1_reg_790;
wire   [11:0] tmp_25_2_fu_546_p2;
reg   [11:0] tmp_25_2_reg_795;
wire   [0:0] notlhs8_fu_580_p2;
reg   [0:0] notlhs8_reg_800;
wire   [0:0] notrhs9_fu_586_p2;
reg   [0:0] notrhs9_reg_805;
wire   [0:0] tmp_30_fu_653_p2;
reg   [0:0] tmp_30_reg_810;
wire   [31:0] tmp_s_6_fu_663_p3;
reg   [31:0] tmp_s_6_reg_815;
wire   [31:0] data2_addr_1_read_read_fu_195_p2;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state25_pp0_stage23_iter0;
reg    ap_block_state57_pp0_stage23_iter1;
reg    ap_block_pp0_stage23_11001;
wire   [31:0] data2_addr_3_read_read_fu_207_p2;
wire   [11:0] count_1_fu_672_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage31_subdone;
reg   [9:0] ap_phi_mux_i_phi_fu_216_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_2_fu_356_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_2_1_fu_377_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_2_2_fu_393_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_2_3_fu_409_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_3_fu_420_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_23_1_fu_529_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_23_2_fu_552_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_23_3_fu_601_p1;
wire    ap_block_pp0_stage8;
wire   [31:0] grp_fu_244_p2;
reg   [31:0] grp_fu_235_p0;
reg   [31:0] grp_fu_235_p1;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage25;
wire    ap_block_pp0_stage26;
wire    ap_block_pp0_stage27;
wire    ap_block_pp0_stage30;
wire    ap_block_pp0_stage31;
reg   [31:0] grp_fu_240_p0;
reg   [31:0] grp_fu_240_p1;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage29;
reg   [31:0] grp_fu_244_p0;
reg   [31:0] grp_fu_244_p1;
reg   [31:0] grp_fu_256_p0;
wire    ap_block_pp0_stage28;
wire   [11:0] tmp_s_fu_372_p2;
wire   [11:0] tmp_1_4_fu_388_p2;
wire   [11:0] tmp_2_5_fu_404_p2;
wire   [31:0] tempVal_3_to_int_fu_431_p1;
wire   [7:0] tmp_5_fu_435_p4;
wire   [22:0] tmp_4_fu_445_p1;
wire   [0:0] notrhs_fu_455_p2;
wire   [0:0] notlhs_fu_449_p2;
wire   [0:0] tmp_10_fu_461_p2;
wire   [31:0] tempVal_3_1_to_int_fu_472_p1;
wire   [7:0] tmp_14_fu_476_p4;
wire   [22:0] tmp_15_fu_486_p1;
wire   [0:0] notrhs7_fu_496_p2;
wire   [0:0] notlhs6_fu_490_p2;
wire   [0:0] tmp_16_fu_502_p2;
wire   [0:0] tmp_18_fu_508_p2;
wire   [0:0] tmp_13_fu_467_p2;
wire   [11:0] tmp_25_s_fu_519_p2;
wire   [12:0] tmp_25_cast1_fu_525_p1;
wire   [31:0] tempVal_3_2_to_int_fu_562_p1;
wire   [7:0] tmp_19_fu_566_p4;
wire   [22:0] tmp_20_fu_576_p1;
wire   [0:0] tmp_21_fu_592_p2;
wire   [31:0] tempVal_3_3_to_int_fu_611_p1;
wire   [7:0] tmp_24_fu_615_p4;
wire   [22:0] tmp_25_fu_625_p1;
wire   [0:0] notrhs1_fu_635_p2;
wire   [0:0] notlhs1_fu_629_p2;
wire   [0:0] tmp_26_fu_641_p2;
wire   [0:0] tmp_28_fu_647_p2;
wire   [0:0] tmp_23_fu_596_p2;
wire   [0:0] tmp_31_fu_659_p2;
reg    grp_fu_235_ce;
reg    grp_fu_240_ce;
reg    grp_fu_244_ce;
wire    ap_block_pp0_stage28_00001;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage4_00001;
reg    ap_block_pp0_stage8_00001;
wire    ap_CS_fsm_state67;
reg   [33:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

myFuncAccel_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel_fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_235_p0),
    .din1(grp_fu_235_p1),
    .ce(grp_fu_235_ce),
    .dout(grp_fu_235_p2)
);

myFuncAccel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel_fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_240_p0),
    .din1(grp_fu_240_p1),
    .ce(grp_fu_240_ce),
    .dout(grp_fu_240_p2)
);

myFuncAccel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel_fmul_32ns_32ns_32_4_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_244_p0),
    .din1(grp_fu_244_p1),
    .ce(grp_fu_244_ce),
    .dout(grp_fu_244_p2)
);

myFuncAccel_fcmp_32ns_32ns_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
myFuncAccel_fcmp_32ns_32ns_1_1_1_U4(
    .din0(grp_fu_256_p0),
    .din1(32'd1120403456),
    .opcode(5'd5),
    .dout(grp_fu_256_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        count_reg_223 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        count_reg_223 <= count_1_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_212 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        i_reg_212 <= i_1_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678 == 1'd0))) begin
        data1_addr_read_1_reg_712 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        data1_addr_read_2_reg_717 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        data1_addr_read_3_reg_722 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678 == 1'd0))) begin
        data1_addr_read_reg_707 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_addr_1_reg_762[11 : 2] <= tmp_2_1_fu_377_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_addr_2_reg_768[11 : 2] <= tmp_2_2_fu_393_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_addr_3_reg_774[11 : 2] <= tmp_2_3_fu_409_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond1_reg_678 == 1'd0))) begin
        data2_addr_reg_695[11 : 2] <= tmp_2_fu_356_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data2_addr_reg_695_pp0_iter1_reg[11 : 2] <= data2_addr_reg_695[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond1_reg_678 <= exitcond1_fu_336_p2;
        exitcond1_reg_678_pp0_iter1_reg <= exitcond1_reg_678;
        tmp_reg_687_pp0_iter1_reg[11 : 2] <= tmp_reg_687[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_1_reg_682 <= i_1_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        notlhs8_reg_800 <= notlhs8_fu_580_p2;
        notrhs9_reg_805 <= notrhs9_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_261 <= data0_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_266 <= data0_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_271 <= data0_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_276 <= data0_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_281 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_287 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_292 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_297 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_303 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_311 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_317 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        reg_324 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)))) begin
        reg_331 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        tmp_11_reg_752 <= grp_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        tmp_13_3_reg_747 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        tmp_17_reg_757 <= grp_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        tmp_19_1_reg_732 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        tmp_22_1_reg_737 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        tmp_22_2_reg_742 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        tmp_22_reg_780 <= grp_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        tmp_25_1_reg_790[12 : 1] <= tmp_25_1_fu_540_p2[12 : 1];
        tmp_25_2_reg_795[11 : 2] <= tmp_25_2_fu_546_p2[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        tmp_29_reg_785 <= tmp_29_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        tmp_30_reg_810 <= tmp_30_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        tmp_9_reg_727 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_fu_336_p2 == 1'd0))) begin
        tmp_reg_687[11 : 2] <= tmp_fu_348_p3[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        tmp_s_6_reg_815[29 : 23] <= tmp_s_6_fu_663_p3[29 : 23];
    end
end

always @ (*) begin
    if ((exitcond1_fu_336_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_216_p4 = i_1_reg_682;
    end else begin
        ap_phi_mux_i_phi_fu_216_p4 = i_reg_212;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        data0_req_write = 1'b1;
    end else begin
        data0_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678 == 1'd0)))) begin
        data0_rsp_read = 1'b1;
    end else begin
        data0_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0))) begin
        data1_req_write = 1'b1;
    end else begin
        data1_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678 == 1'd0)))) begin
        data1_rsp_read = 1'b1;
    end else begin
        data1_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = tmp_23_3_fu_601_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = tmp_23_2_fu_552_p1;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = tmp_23_1_fu_529_p1;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = tmp_3_fu_420_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_address = data2_addr_3_reg_774;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = tmp_2_3_fu_409_p1;
    end else if ((((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_address = data2_addr_2_reg_768;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = tmp_2_2_fu_393_p1;
    end else if ((((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_address = data2_addr_1_reg_762;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = tmp_2_1_fu_377_p1;
    end else if ((((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_address = data2_addr_reg_695_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_address = data2_addr_reg_695;
    end else begin
        data2_address = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_dataout = reg_324;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0))) begin
        data2_dataout = reg_317;
    end else if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_dataout = reg_303;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_dataout = grp_fu_240_p2;
    end else if ((((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_dataout = grp_fu_244_p2;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_dataout = 32'd0;
    end else begin
        data2_dataout = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_req_din = 1'b0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_req_din = 1'b1;
    end else begin
        data2_req_din = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_req_write = 1'b1;
    end else begin
        data2_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)))) begin
        data2_rsp_read = 1'b1;
    end else begin
        data2_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_235_ce = 1'b1;
    end else begin
        grp_fu_235_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage30) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_235_p0 = reg_331;
    end else if ((((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage26) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_235_p0 = reg_324;
    end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p0 = tmp_13_3_reg_747;
    end else if ((((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_235_p0 = reg_317;
    end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p0 = reg_311;
    end else if ((((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_235_p0 = reg_303;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p0 = reg_297;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p0 = reg_281;
    end else begin
        grp_fu_235_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p1 = tmp_22_2_reg_742;
    end else if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p1 = tmp_22_1_reg_737;
    end else if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p1 = reg_311;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p1 = tmp_9_reg_727;
    end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p1 = tmp_19_1_reg_732;
    end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_235_p1 = reg_297;
    end else if ((((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_235_p1 = reg_292;
    end else if ((((1'b0 == ap_block_pp0_stage30) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_235_p1 = reg_281;
    end else if ((((1'b0 == ap_block_pp0_stage26) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_235_p1 = reg_287;
    end else if ((((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_235_p1 = 32'd0;
    end else begin
        grp_fu_235_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)))) begin
        grp_fu_240_ce = 1'b1;
    end else begin
        grp_fu_240_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage29) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_240_p0 = data2_addr_3_read_read_fu_207_p2;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_240_p0 = data2_datain;
    end else if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p0 = reg_276;
    end else if ((((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p0 = reg_271;
    end else if ((((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p0 = reg_266;
    end else if ((((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p0 = reg_261;
    end else begin
        grp_fu_240_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage29) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_240_p1 = tmp_s_6_reg_815;
    end else if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p1 = data1_addr_read_3_reg_722;
    end else if ((((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p1 = data1_addr_read_2_reg_717;
    end else if ((((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p1 = data1_addr_read_1_reg_712;
    end else if ((((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_240_p1 = data1_addr_read_reg_707;
    end else begin
        grp_fu_240_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        grp_fu_244_ce = 1'b1;
    end else begin
        grp_fu_244_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            grp_fu_244_p0 = data2_addr_1_read_read_fu_195_p2;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_244_p0 = data2_datain;
        end else begin
            grp_fu_244_p0 = 'bx;
        end
    end else begin
        grp_fu_244_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            grp_fu_244_p1 = tmp_s_6_reg_815;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_244_p1 = tmp_s_6_fu_663_p3;
        end else begin
            grp_fu_244_p1 = 'bx;
        end
    end else begin
        grp_fu_244_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_256_p0 = reg_324;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_256_p0 = reg_317;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage28) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_256_p0 = reg_303;
    end else begin
        grp_fu_256_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_fu_336_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_fu_336_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd33];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = (((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = (((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = (((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((data2_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_00001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)))));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_00001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((data2_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((data0_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage16_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

always @ (*) begin
    ap_block_state20_pp0_stage18_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

assign ap_block_state21_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state35_pp0_stage1_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state36_pp0_stage2_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state37_pp0_stage3_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state38_pp0_stage4_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state39_pp0_stage5_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp0_stage6_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state41_pp0_stage7_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state42_pp0_stage8_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state43_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_pp0_stage11_iter1 = ((data2_rsp_empty_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state46_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state48_pp0_stage14_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state49_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state51_pp0_stage17_iter1 = ((data2_rsp_empty_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state52_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state54_pp0_stage20_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state55_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state57_pp0_stage23_iter1 = ((data2_rsp_empty_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state58_pp0_stage24_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage25_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_state60_pp0_stage26_iter1 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state61_pp0_stage27_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage28_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state63_pp0_stage29_iter1 = ((data2_rsp_empty_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

assign ap_block_state64_pp0_stage30_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage31_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state66_pp0_stage0_iter2 = ((data2_req_full_n == 1'b0) & (exitcond1_reg_678_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = (((data1_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)) | ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = ((data0_rsp_empty_n == 1'b0) & (exitcond1_reg_678 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign count_1_fu_672_p2 = (12'd4 + count_reg_223);

assign data0_address = 32'd0;

assign data0_dataout = 32'd0;

assign data0_req_din = 1'b0;

assign data0_size = 32'd16;

assign data1_address = tmp_2_fu_356_p1;

assign data1_dataout = 32'd0;

assign data1_req_din = 1'b0;

assign data1_size = 32'd4;

assign data2_addr_1_read_read_fu_195_p2 = data2_datain;

assign data2_addr_3_read_read_fu_207_p2 = data2_datain;

assign data2_size = 32'd1;

assign exitcond1_fu_336_p2 = ((ap_phi_mux_i_phi_fu_216_p4 == 10'd1000) ? 1'b1 : 1'b0);

assign i_1_fu_342_p2 = (ap_phi_mux_i_phi_fu_216_p4 + 10'd1);

assign notlhs1_fu_629_p2 = ((tmp_24_fu_615_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_490_p2 = ((tmp_14_fu_476_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_580_p2 = ((tmp_19_fu_566_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_449_p2 = ((tmp_5_fu_435_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_635_p2 = ((tmp_25_fu_625_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_496_p2 = ((tmp_15_fu_486_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs9_fu_586_p2 = ((tmp_20_fu_576_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_455_p2 = ((tmp_4_fu_445_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tempVal_3_1_to_int_fu_472_p1 = reg_317;

assign tempVal_3_2_to_int_fu_562_p1 = reg_324;

assign tempVal_3_3_to_int_fu_611_p1 = reg_303;

assign tempVal_3_to_int_fu_431_p1 = reg_303;

assign tmp_10_fu_461_p2 = (notrhs_fu_455_p2 | notlhs_fu_449_p2);

assign tmp_13_fu_467_p2 = (tmp_11_reg_752 & tmp_10_fu_461_p2);

assign tmp_14_fu_476_p4 = {{tempVal_3_1_to_int_fu_472_p1[30:23]}};

assign tmp_15_fu_486_p1 = tempVal_3_1_to_int_fu_472_p1[22:0];

assign tmp_16_fu_502_p2 = (notrhs7_fu_496_p2 | notlhs6_fu_490_p2);

assign tmp_18_fu_508_p2 = (tmp_17_reg_757 & tmp_16_fu_502_p2);

assign tmp_19_fu_566_p4 = {{tempVal_3_2_to_int_fu_562_p1[30:23]}};

assign tmp_1_4_fu_388_p2 = (tmp_reg_687_pp0_iter1_reg | 12'd2);

assign tmp_20_fu_576_p1 = tempVal_3_2_to_int_fu_562_p1[22:0];

assign tmp_21_fu_592_p2 = (notrhs9_reg_805 | notlhs8_reg_800);

assign tmp_23_1_fu_529_p1 = tmp_25_s_fu_519_p2;

assign tmp_23_2_fu_552_p1 = tmp_25_1_reg_790;

assign tmp_23_3_fu_601_p1 = tmp_25_2_reg_795;

assign tmp_23_fu_596_p2 = (tmp_22_reg_780 & tmp_21_fu_592_p2);

assign tmp_24_fu_615_p4 = {{tempVal_3_3_to_int_fu_611_p1[30:23]}};

assign tmp_25_1_fu_540_p2 = (13'd1 + tmp_25_cast1_fu_525_p1);

assign tmp_25_2_fu_546_p2 = (count_reg_223 | 12'd3);

assign tmp_25_cast1_fu_525_p1 = tmp_25_s_fu_519_p2;

assign tmp_25_fu_625_p1 = tempVal_3_3_to_int_fu_611_p1[22:0];

assign tmp_25_s_fu_519_p2 = (count_reg_223 | 12'd1);

assign tmp_26_fu_641_p2 = (notrhs1_fu_635_p2 | notlhs1_fu_629_p2);

assign tmp_28_fu_647_p2 = (tmp_26_fu_641_p2 & grp_fu_256_p2);

assign tmp_29_fu_513_p2 = (tmp_18_fu_508_p2 | tmp_13_fu_467_p2);

assign tmp_2_1_fu_377_p1 = tmp_s_fu_372_p2;

assign tmp_2_2_fu_393_p1 = tmp_1_4_fu_388_p2;

assign tmp_2_3_fu_409_p1 = tmp_2_5_fu_404_p2;

assign tmp_2_5_fu_404_p2 = (tmp_reg_687_pp0_iter1_reg | 12'd3);

assign tmp_2_fu_356_p1 = tmp_reg_687;

assign tmp_30_fu_653_p2 = (tmp_28_fu_647_p2 | tmp_23_fu_596_p2);

assign tmp_31_fu_659_p2 = (tmp_30_reg_810 | tmp_29_reg_785);

assign tmp_3_fu_420_p1 = count_reg_223;

assign tmp_4_fu_445_p1 = tempVal_3_to_int_fu_431_p1[22:0];

assign tmp_5_fu_435_p4 = {{tempVal_3_to_int_fu_431_p1[30:23]}};

assign tmp_fu_348_p3 = {{ap_phi_mux_i_phi_fu_216_p4}, {2'd0}};

assign tmp_s_6_fu_663_p3 = ((tmp_31_fu_659_p2[0:0] === 1'b1) ? 32'd1065353216 : 32'd0);

assign tmp_s_fu_372_p2 = (tmp_reg_687_pp0_iter1_reg | 12'd1);

always @ (posedge ap_clk) begin
    tmp_reg_687[1:0] <= 2'b00;
    tmp_reg_687_pp0_iter1_reg[1:0] <= 2'b00;
    data2_addr_reg_695[1:0] <= 2'b00;
    data2_addr_reg_695[31:12] <= 20'b00000000000000000000;
    data2_addr_reg_695_pp0_iter1_reg[1:0] <= 2'b00;
    data2_addr_reg_695_pp0_iter1_reg[31:12] <= 20'b00000000000000000000;
    data2_addr_1_reg_762[1:0] <= 2'b01;
    data2_addr_1_reg_762[31:12] <= 20'b00000000000000000000;
    data2_addr_2_reg_768[1:0] <= 2'b10;
    data2_addr_2_reg_768[31:12] <= 20'b00000000000000000000;
    data2_addr_3_reg_774[1:0] <= 2'b11;
    data2_addr_3_reg_774[31:12] <= 20'b00000000000000000000;
    tmp_25_1_reg_790[0] <= 1'b0;
    tmp_25_2_reg_795[1:0] <= 2'b11;
    tmp_s_6_reg_815[22:0] <= 23'b00000000000000000000000;
    tmp_s_6_reg_815[31:30] <= 2'b00;
end

endmodule //myFuncAccel
