// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myFuncAccel,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=215001,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=805,HLS_SYN_LUT=1386,HLS_VERSION=2018_3}" *)

module myFuncAccel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        size,
        dim,
        threshold,
        data0_req_din,
        data0_req_full_n,
        data0_req_write,
        data0_rsp_empty_n,
        data0_rsp_read,
        data0_address,
        data0_datain,
        data0_dataout,
        data0_size,
        data1_req_din,
        data1_req_full_n,
        data1_req_write,
        data1_rsp_empty_n,
        data1_rsp_read,
        data1_address,
        data1_datain,
        data1_dataout,
        data1_size,
        data2_req_din,
        data2_req_full_n,
        data2_req_write,
        data2_rsp_empty_n,
        data2_rsp_read,
        data2_address,
        data2_datain,
        data2_dataout,
        data2_size
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] size;
input  [31:0] dim;
input  [31:0] threshold;
output   data0_req_din;
input   data0_req_full_n;
output   data0_req_write;
input   data0_rsp_empty_n;
output   data0_rsp_read;
output  [31:0] data0_address;
input  [31:0] data0_datain;
output  [31:0] data0_dataout;
output  [31:0] data0_size;
output   data1_req_din;
input   data1_req_full_n;
output   data1_req_write;
input   data1_rsp_empty_n;
output   data1_rsp_read;
output  [31:0] data1_address;
input  [31:0] data1_datain;
output  [31:0] data1_dataout;
output  [31:0] data1_size;
output   data2_req_din;
input   data2_req_full_n;
output   data2_req_write;
input   data2_rsp_empty_n;
output   data2_rsp_read;
output  [31:0] data2_address;
input  [31:0] data2_datain;
output  [31:0] data2_dataout;
output  [31:0] data2_size;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data0_req_write;
reg data0_rsp_read;
reg data1_req_write;
reg data1_rsp_read;
reg data2_req_din;
reg data2_req_write;
reg data2_rsp_read;
reg[31:0] data2_address;
reg[31:0] data2_dataout;
reg[31:0] data2_size;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] i_1_fu_262_p2;
reg   [9:0] i_1_reg_430;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_1_fu_268_p3;
reg   [11:0] tmp_1_reg_435;
wire   [0:0] tmp_fu_256_p2;
wire   [63:0] tmp_4_fu_276_p1;
reg   [63:0] tmp_4_reg_441;
reg   [31:0] data2_addr_reg_446;
wire   [2:0] k_2_fu_292_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_2_fu_286_p2;
reg    ap_block_state3;
reg   [31:0] data1_addr_reg_462;
wire   [11:0] k_1_cast4_fu_309_p1;
reg   [11:0] k_1_cast4_reg_468;
wire    ap_CS_fsm_state4;
wire   [2:0] k_3_fu_319_p2;
reg   [2:0] k_3_reg_476;
wire   [0:0] tmp_6_fu_313_p2;
reg   [31:0] data2_addr_1_reg_487;
wire    ap_CS_fsm_state5;
wire   [2:0] l_3_fu_368_p2;
reg   [2:0] l_3_reg_496;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_5_fu_362_p2;
reg    ap_block_state6;
reg   [31:0] data0_addr_read_reg_501;
reg   [31:0] data1_addr_read_reg_506;
wire   [31:0] grp_fu_241_p2;
reg   [31:0] tmp_15_reg_511;
wire    ap_CS_fsm_state10;
reg   [31:0] data2_addr_1_read_reg_516;
wire   [31:0] grp_fu_237_p2;
reg   [31:0] tmp_16_reg_521;
wire    ap_CS_fsm_state15;
wire   [2:0] l_4_fu_384_p2;
reg   [2:0] l_4_reg_529;
wire    ap_CS_fsm_state17;
wire   [11:0] tmp_17_fu_390_p2;
reg   [11:0] tmp_17_reg_537;
wire   [0:0] tmp_s_fu_378_p2;
wire   [0:0] grp_fu_250_p2;
reg   [0:0] tmp_10_reg_542;
wire    ap_CS_fsm_state18;
reg   [31:0] data2_addr_2_read_reg_552;
wire    ap_CS_fsm_state20;
wire   [31:0] r_1_fu_405_p1;
wire    ap_CS_fsm_state21;
wire   [2:0] l_5_fu_415_p2;
wire    ap_CS_fsm_state23;
wire   [0:0] tmp_20_fu_409_p2;
reg    ap_predicate_op141_write_state23;
reg    ap_block_state23;
reg   [9:0] i_reg_147;
reg   [2:0] k_reg_158;
reg   [2:0] k_1_reg_169;
reg   [2:0] l_reg_180;
wire    ap_CS_fsm_state16;
reg   [2:0] l_1_reg_191;
wire    ap_CS_fsm_state22;
reg   [31:0] r_reg_202;
reg   [31:0] r_be_reg_214;
reg   [2:0] l_2_reg_226;
wire   [63:0] tmp_14_fu_337_p1;
wire   [63:0] tmp_9_fu_352_p1;
wire   [63:0] tmp_18_fu_395_p1;
wire   [0:0] is_0iter_fu_298_p2;
wire   [0:0] is_0iter3_fu_421_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state7;
wire   [1:0] tmp_13_fu_325_p1;
wire   [3:0] tmp_7_fu_329_p3;
wire   [11:0] tmp_8_fu_348_p2;
wire   [11:0] l_1_cast2_fu_374_p1;
wire   [0:0] tmp_19_fu_245_p2;
reg    grp_fu_241_ce;
wire    ap_CS_fsm_state9;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
end

myFuncAccel_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel_fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data2_addr_1_read_reg_516),
    .din1(tmp_15_reg_511),
    .ce(1'b1),
    .dout(grp_fu_237_p2)
);

myFuncAccel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel_fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data0_addr_read_reg_501),
    .din1(data1_addr_read_reg_506),
    .ce(grp_fu_241_ce),
    .dout(grp_fu_241_p2)
);

myFuncAccel_fcmp_32ns_32ns_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
myFuncAccel_fcmp_32ns_32ns_1_1_1_U3(
    .din0(data2_addr_2_read_reg_552),
    .din1(32'd1120403456),
    .opcode(5'd2),
    .dout(tmp_19_fu_245_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23) & ((tmp_20_fu_409_p2 == 1'd1) | (tmp_10_reg_542 == 1'd1)))) begin
        i_reg_147 <= i_1_reg_430;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_147 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_286_p2 == 1'd1))) begin
        k_1_reg_169 <= 3'd0;
    end else if ((~(((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (tmp_5_fu_362_p2 == 1'd1))) begin
        k_1_reg_169 <= k_3_reg_476;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (tmp_2_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        k_reg_158 <= k_2_fu_292_p2;
    end else if (((tmp_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_reg_158 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        l_1_reg_191 <= l_4_reg_529;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_6_fu_313_p2 == 1'd1))) begin
        l_1_reg_191 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_250_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (tmp_s_fu_378_p2 == 1'd1))) begin
        l_2_reg_226 <= 3'd0;
    end else if ((~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (tmp_20_fu_409_p2 == 1'd0) & (tmp_10_reg_542 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        l_2_reg_226 <= l_5_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((data2_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        l_reg_180 <= l_3_reg_496;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        l_reg_180 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_378_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (grp_fu_250_p2 == 1'd1))) begin
        r_be_reg_214 <= r_reg_202;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_be_reg_214 <= r_1_fu_405_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        r_reg_202 <= r_be_reg_214;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_6_fu_313_p2 == 1'd1))) begin
        r_reg_202 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0))) & (tmp_5_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        data0_addr_read_reg_501 <= data0_datain;
        data1_addr_read_reg_506 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_286_p2 == 1'd1))) begin
        data1_addr_reg_462[11 : 2] <= tmp_4_reg_441[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((data2_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        data2_addr_1_read_reg_516 <= data2_datain;
        tmp_15_reg_511 <= grp_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data2_addr_1_reg_487[11 : 0] <= tmp_9_fu_352_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((data2_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        data2_addr_2_read_reg_552 <= data2_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        data2_addr_reg_446[11 : 2] <= tmp_4_fu_276_p1[11 : 2];
        tmp_1_reg_435[11 : 2] <= tmp_1_fu_268_p3[11 : 2];
        tmp_4_reg_441[11 : 2] <= tmp_4_fu_276_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_430 <= i_1_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_1_cast4_reg_468[2 : 0] <= k_1_cast4_fu_309_p1[2 : 0];
        k_3_reg_476 <= k_3_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
        l_3_reg_496 <= l_3_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        l_4_reg_529 <= l_4_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_s_fu_378_p2 == 1'd1))) begin
        tmp_10_reg_542 <= grp_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_16_reg_521 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_250_p2 == 1'd0) & (tmp_s_fu_378_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        tmp_17_reg_537 <= tmp_17_fu_390_p2;
    end
end

always @ (*) begin
    if (((tmp_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_6_fu_313_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        data0_req_write = 1'b1;
    end else begin
        data0_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0))) & (tmp_5_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        data0_rsp_read = 1'b1;
    end else begin
        data0_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_6_fu_313_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        data1_req_write = 1'b1;
    end else begin
        data1_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0))) & (tmp_5_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        data1_rsp_read = 1'b1;
    end else begin
        data1_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        data2_address = tmp_18_fu_395_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((data2_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        data2_address = data2_addr_1_reg_487;
    end else if (((~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (tmp_20_fu_409_p2 == 1'd0) & (tmp_10_reg_542 == 1'd0) & (1'b1 == ap_CS_fsm_state23) & (is_0iter3_fu_421_p2 == 1'd1)) | (~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (tmp_2_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (is_0iter_fu_298_p2 == 1'd1)))) begin
        data2_address = data2_addr_reg_446;
    end else begin
        data2_address = 'bx;
    end
end

always @ (*) begin
    if (((data2_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        data2_dataout = tmp_16_reg_521;
    end else if (((~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (ap_predicate_op141_write_state23 == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | (~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (tmp_2_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        data2_dataout = 32'd0;
    end else begin
        data2_dataout = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state18))) begin
        data2_req_din = 1'b0;
    end else if ((((data2_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | (~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (ap_predicate_op141_write_state23 == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | (~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (tmp_20_fu_409_p2 == 1'd0) & (tmp_10_reg_542 == 1'd0) & (1'b1 == ap_CS_fsm_state23) & (is_0iter3_fu_421_p2 == 1'd1)) | (~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (tmp_2_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        data2_req_din = 1'b1;
    end else begin
        data2_req_din = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state18) | ((data2_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | (~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (ap_predicate_op141_write_state23 == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | (~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (tmp_20_fu_409_p2 == 1'd0) & (tmp_10_reg_542 == 1'd0) & (1'b1 == ap_CS_fsm_state23) & (is_0iter3_fu_421_p2 == 1'd1)) | (~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (tmp_2_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        data2_req_write = 1'b1;
    end else begin
        data2_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((((data2_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((data2_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        data2_rsp_read = 1'b1;
    end else begin
        data2_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state18) | ((data2_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        data2_size = 32'd1;
    end else if (((~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (tmp_20_fu_409_p2 == 1'd0) & (tmp_10_reg_542 == 1'd0) & (1'b1 == ap_CS_fsm_state23) & (is_0iter3_fu_421_p2 == 1'd1)) | (~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (tmp_2_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (is_0iter_fu_298_p2 == 1'd1)))) begin
        data2_size = 32'd4;
    end else begin
        data2_size = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | ((data2_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_241_ce = 1'b1;
    end else begin
        grp_fu_241_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_286_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0)) & (tmp_2_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_6_fu_313_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((~(((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (tmp_5_fu_362_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0))) & (tmp_5_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((data2_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((data2_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (tmp_s_fu_378_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if (((tmp_s_fu_378_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (grp_fu_250_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((data2_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state23 : begin
            if ((~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23) & ((tmp_20_fu_409_p2 == 1'd1) | (tmp_10_reg_542 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0)) & (tmp_20_fu_409_p2 == 1'd0) & (tmp_10_reg_542 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state23 = ((ap_predicate_op141_write_state23 == 1'b1) & (data2_req_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((tmp_2_fu_286_p2 == 1'd0) & (data2_req_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = (((tmp_5_fu_362_p2 == 1'd0) & (data1_rsp_empty_n == 1'b0)) | ((tmp_5_fu_362_p2 == 1'd0) & (data0_rsp_empty_n == 1'b0)));
end

always @ (*) begin
    ap_predicate_op141_write_state23 = ((tmp_20_fu_409_p2 == 1'd0) & (tmp_10_reg_542 == 1'd0));
end

assign data0_address = tmp_14_fu_337_p1;

assign data0_dataout = 32'd0;

assign data0_req_din = 1'b0;

assign data0_size = 32'd4;

assign data1_address = data1_addr_reg_462;

assign data1_dataout = 32'd0;

assign data1_req_din = 1'b0;

assign data1_size = 32'd4;

assign grp_fu_250_p2 = ((r_reg_202 == 32'd0) ? 1'b1 : 1'b0);

assign i_1_fu_262_p2 = (i_reg_147 + 10'd1);

assign is_0iter3_fu_421_p2 = ((l_2_reg_226 == 3'd0) ? 1'b1 : 1'b0);

assign is_0iter_fu_298_p2 = ((k_reg_158 == 3'd0) ? 1'b1 : 1'b0);

assign k_1_cast4_fu_309_p1 = k_1_reg_169;

assign k_2_fu_292_p2 = (k_reg_158 + 3'd1);

assign k_3_fu_319_p2 = (k_1_reg_169 + 3'd1);

assign l_1_cast2_fu_374_p1 = l_1_reg_191;

assign l_3_fu_368_p2 = (l_reg_180 + 3'd1);

assign l_4_fu_384_p2 = (l_1_reg_191 + 3'd1);

assign l_5_fu_415_p2 = (l_2_reg_226 + 3'd1);

assign r_1_fu_405_p1 = tmp_19_fu_245_p2;

assign tmp_13_fu_325_p1 = k_1_reg_169[1:0];

assign tmp_14_fu_337_p1 = tmp_7_fu_329_p3;

assign tmp_17_fu_390_p2 = (l_1_cast2_fu_374_p1 + tmp_1_reg_435);

assign tmp_18_fu_395_p1 = tmp_17_reg_537;

assign tmp_1_fu_268_p3 = {{i_reg_147}, {2'd0}};

assign tmp_20_fu_409_p2 = ((l_2_reg_226 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_2_fu_286_p2 = ((k_reg_158 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_4_fu_276_p1 = tmp_1_fu_268_p3;

assign tmp_5_fu_362_p2 = ((l_reg_180 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_6_fu_313_p2 = ((k_1_reg_169 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_7_fu_329_p3 = {{tmp_13_fu_325_p1}, {2'd0}};

assign tmp_8_fu_348_p2 = (tmp_1_reg_435 + k_1_cast4_reg_468);

assign tmp_9_fu_352_p1 = tmp_8_fu_348_p2;

assign tmp_fu_256_p2 = ((i_reg_147 == 10'd1000) ? 1'b1 : 1'b0);

assign tmp_s_fu_378_p2 = ((l_1_reg_191 == 3'd4) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_1_reg_435[1:0] <= 2'b00;
    tmp_4_reg_441[1:0] <= 2'b00;
    tmp_4_reg_441[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    data2_addr_reg_446[1:0] <= 2'b00;
    data2_addr_reg_446[31:12] <= 20'b00000000000000000000;
    data1_addr_reg_462[1:0] <= 2'b00;
    data1_addr_reg_462[31:12] <= 20'b00000000000000000000;
    k_1_cast4_reg_468[11:3] <= 9'b000000000;
    data2_addr_1_reg_487[31:12] <= 20'b00000000000000000000;
end

endmodule //myFuncAccel
