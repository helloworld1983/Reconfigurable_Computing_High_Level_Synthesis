23:52:58 **** Build of configuration Debug for project Algo_4 ****
make pre-build main-build 
sdsoc_make_clean Debug
 
Building file: ../src/main.c
Invoking: SDSCC Compiler
sdscc -Wall -O0 -g -I"../src" -c -fmessage-length=0 -MT"src/main.o" -MMD -MP -MF"src/main.d" -MT"src/main.o" -o "src/main.o" "../src/main.c" -sds-hw myFuncAccel myAccel.c  -clkid 2 -sds-end -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Analyzing source for RTL template usage
Create data motion intermediate representation
Compiling /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/main.c
sdscc log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds_main.log

Finished building: ../src/main.c
 
Building file: ../src/myAccel.c
Invoking: SDSCC Compiler
sdscc -Wall -O0 -g -I"../src" -c -fmessage-length=0 -MT"src/myAccel.o" -MMD -MP -MF"src/myAccel.d" -MT"src/myAccel.o" -o "src/myAccel.o" "../src/myAccel.c" -sds-hw myFuncAccel myAccel.c  -clkid 2 -sds-end -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Processing -sds-hw block for myFuncAccel
Analyzing source for RTL template usage
Create data motion intermediate representation
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:42:1: warning: unused label 'copyLoop' [-Wunused-label]
copyLoop: for ( i = 0 ; i < dim ; i++){
^~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:58:1: warning: unused label 'initLoop' [-Wunused-label]
initLoop:       for ( k = 0 ; k < dim ; k ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:65:1: warning: unused label 'valueAsn' [-Wunused-label]
valueAsn:       for ( k = 0 ; k < dim ; k ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:87:1: warning: unused label 'zeroAsn' [-Wunused-label]
zeroAsn:        for ( l = 0 ;l < dim ; l ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:51:1: warning: unused label 'sizeLoop' [-Wunused-label]
sizeLoop:
^~~~~~~~~
Performing accelerator source linting for myFuncAccel
Performing pragma generation
INFO: [PragmaGen 83-3231] Successfully generated tcl script: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/vhls/myFuncAccel.tcl
Moving function myFuncAccel to Programmable Logic
sdscc log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds_myAccel.log

Finished building: ../src/myAccel.c
 
Building target: Algo_4.elf
Invoking: SDS++ Linker
sds++ --remote_ip_cache /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/ip_cache -o "Algo_4.elf"  ./src/main.o ./src/myAccel.o    -dmclkid 2  -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Analyzing object files
... /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/src/main.o
... /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/src/myAccel.o
Generating data motion network
INFO: [DMAnalysis 83-4494] Analyzing hardware accelerators...
INFO: [DMAnalysis 83-4497] Analyzing callers to hardware accelerators...
INFO: [DMAnalysis 83-4444] Scheduling data transfer graph for partition 0
INFO: [DMAnalysis 83-4446] Creating data motion network hardware for partition 0
INFO: [DMAnalysis 83-4448] Creating software stub functions for partition 0
INFO: [DMAnalysis 83-4450] Generating data motion network report for partition 0
INFO: [DMAnalysis 83-4454] Rewriting caller code
/toolsViv/Xilinx/SDx/2018.3/bin/XidanePass: line 14: gawk: command not found
Data motion generation completed successfully with exit code 0
Creating block diagram (BD)
Creating top.bd.tcl
Rewrite caller functions
Compile caller rewrite file /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/swstubs/main.c
Prepare hardware access API functions
Create accelerator stub functions
Compile hardware access API functions
Compile accelerator stub functions
myAccel.c: In function ‘myFuncAccel’:
myAccel.c:87:1: warning: label ‘zeroAsn’ defined but not used [-Wunused-label]
 zeroAsn: for ( l = 0 ;l < dim ; l ++ )
 ^~~~~~~
myAccel.c:65:1: warning: label ‘valueAsn’ defined but not used [-Wunused-label]
 valueAsn: for ( k = 0 ; k < dim ; k ++ )
 ^~~~~~~~
myAccel.c:58:1: warning: label ‘initLoop’ defined but not used [-Wunused-label]
 initLoop: for ( k = 0 ; k < dim ; k ++ )
 ^~~~~~~~
myAccel.c:51:1: warning: label ‘sizeLoop’ defined but not used [-Wunused-label]
 sizeLoop:
 ^~~~~~~~
myAccel.c:42:1: warning: label ‘copyLoop’ defined but not used [-Wunused-label]
 copyLoop: for ( i = 0 ; i < dim ; i++){
 ^~~~~~~~
Preliminary link application ELF
Enable generation of hardware programming files
Enable generation of boot files
Calling VPL

****** vpl v2018.3 (64-bit)
  **** SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
    ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

Attempting to get a license: ap_opencl
Feature available: ap_opencl
INFO: [VPL 60-895]   Target platform: /toolsViv/Xilinx/SDx/2018.3/platforms/zed/zed.xpfm
INFO: [VPL 60-423]   Target device: zed
INFO: [VPL 60-1032] Extracting DSA to /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vivado/.local/dsa
INFO: [VPL 60-251]   Hardware accelerator integration...
Creating Vivado project and starting FPGA synthesis.
[23:58:37] Block-level synthesis in progress, 1 of 11 jobs complete, 1 job running.
[23:59:37] Block-level synthesis in progress, 3 of 11 jobs complete, 1 job running.
[00:00:37] Block-level synthesis in progress, 5 of 11 jobs complete, 0 jobs running.
[00:01:37] Block-level synthesis in progress, 7 of 11 jobs complete, 0 jobs running.
[00:02:37] Block-level synthesis in progress, 9 of 11 jobs complete, 0 jobs running.
[00:03:37] Block-level synthesis in progress, 9 of 11 jobs complete, 2 jobs running.
[00:04:37] Block-level synthesis in progress, 10 of 11 jobs complete, 1 job running.
[00:05:37] Block-level synthesis in progress, 10 of 11 jobs complete, 1 job running.
[00:06:37] Block-level synthesis in progress, 10 of 11 jobs complete, 1 job running.
[00:07:37] Block-level synthesis in progress, 11 of 11 jobs complete, 0 jobs running.
[00:09:15] Finished 2nd of 6 tasks (FPGA linking synthesized kernels to platform). Elapsed time: 00h 15m 07s 

[00:09:15] Starting logic optimization..
[00:09:21] Phase 1 Retarget
[00:09:21] Phase 2 Constant propagation
[00:09:21] Phase 3 Sweep
[00:09:26] Phase 4 BUFG optimization
[00:09:26] Phase 5 Shift Register Optimization
[00:09:26] Phase 6 Post Processing Netlist
[00:09:47] Finished 3rd of 6 tasks (FPGA logic optimization). Elapsed time: 00h 00m 32s 

[00:09:47] Starting logic placement..
[00:09:47] Phase 1 Placer Initialization
[00:09:47] Phase 1.1 Placer Initialization Netlist Sorting
[00:09:47] Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
[00:09:53] Phase 1.3 Build Placer Netlist Model
[00:09:58] Phase 1.4 Constrain Clocks/Macros
[00:09:58] Phase 2 Global Placement
[00:09:58] Phase 2.1 Floorplanning
[00:10:19] Phase 2.2 Physical Synthesis In Placer
[00:10:19] Phase 3 Detail Placement
[00:10:19] Phase 3.1 Commit Multi Column Macros
[00:10:19] Phase 3.2 Commit Most Macros & LUTRAMs
[00:10:25] Phase 3.3 Area Swap Optimization
[00:10:25] Phase 3.4 Pipeline Register Optimization
[00:10:25] Phase 3.5 Small Shape Detail Placement
[00:10:30] Phase 3.6 Re-assign LUT pins
[00:10:35] Phase 3.7 Pipeline Register Optimization
[00:10:35] Phase 4 Post Placement Optimization and Clean-Up
[00:10:35] Phase 4.1 Post Commit Optimization
[00:10:35] Phase 4.1.1 Post Placement Optimization
[00:10:35] Phase 4.1.1.1 BUFG Insertion
[00:10:40] Finished 4th of 6 tasks (FPGA logic placement). Elapsed time: 00h 00m 53s 

[00:10:40] Starting logic routing..
[00:10:40] Phase 4.2 Post Placement Cleanup
[00:10:40] Phase 4.3 Placer Reporting
[00:10:40] Phase 4.4 Final Placement Cleanup
[00:10:46] Phase 1 Build RT Design
[00:11:13] Phase 2 Router Initialization
[00:11:13] Phase 2.1 Create Timer
[00:11:13] Phase 2.2 Fix Topology Constraints
[00:11:18] Phase 2.3 Pre Route Cleanup
[00:11:18] Phase 2.4 Update Timing
[00:11:24] Phase 3 Initial Routing
[00:11:29] Phase 4 Rip-up And Reroute
[00:11:29] Phase 4.1 Global Iteration 0
[00:11:40] Phase 4.2 Global Iteration 1
[00:11:40] Phase 5 Delay and Skew Optimization
[00:11:40] Phase 5.1 Delay CleanUp
[00:11:40] Phase 5.1.1 Update Timing
[00:11:46] Phase 5.2 Clock Skew Optimization
[00:11:46] Phase 6 Post Hold Fix
[00:11:46] Phase 6.1 Hold Fix Iter
[00:11:46] Phase 6.1.1 Update Timing
[00:11:46] Phase 7 Route finalize
[00:11:46] Phase 8 Verifying routed nets
[00:11:46] Phase 9 Depositing Routes
[00:11:46] Phase 10 Post Router Timing
[00:11:46] Finished 5th of 6 tasks (FPGA routing). Elapsed time: 00h 01m 05s 

[00:11:46] Starting bitstream generation..
[00:12:34] Creating bitmap...
[00:12:50] Writing bitstream ./zed_wrapper.bit...
[00:12:50] Finished 6th of 6 tasks (FPGA bitstream generation). Elapsed time: 00h 01m 04s 

INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/address_map.xml
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/_new_clk_freq
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/system.hdf
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/system.bit
Software tracing enabled
Compile hardware access API functions
Link application ELF file
SD card folder created /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/sd_card
All user specified timing constraints are met.
sds++ log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds.log

Finished building target: Algo_4.elf
 
00:14:25 **** Clean-only build of configuration Debug for project Algo_4 ****
make clean 
rm -rf _sds sd_card  ./src/main.o ./src/myAccel.o  ./src/main.d ./src/myAccel.d  Algo_4.elf
 
00:14:33 **** Build of configuration Debug for project Algo_4 ****
make pre-build main-build 
sdsoc_make_clean Debug
 
Building file: ../src/main.c
Invoking: SDSCC Compiler
sdscc -Wall -O0 -g -I"../src" -c -fmessage-length=0 -MT"src/main.o" -MMD -MP -MF"src/main.d" -MT"src/main.o" -o "src/main.o" "../src/main.c" -sds-hw myFuncAccel myAccel.c  -clkid 2 -sds-end -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Analyzing source for RTL template usage
Create data motion intermediate representation
Compiling /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/main.c
sdscc log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds_main.log

Finished building: ../src/main.c
 
Building file: ../src/myAccel.c
Invoking: SDSCC Compiler
sdscc -Wall -O0 -g -I"../src" -c -fmessage-length=0 -MT"src/myAccel.o" -MMD -MP -MF"src/myAccel.d" -MT"src/myAccel.o" -o "src/myAccel.o" "../src/myAccel.c" -sds-hw myFuncAccel myAccel.c  -clkid 2 -sds-end -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Processing -sds-hw block for myFuncAccel
Analyzing source for RTL template usage
Create data motion intermediate representation
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:42:1: warning: unused label 'copyLoop' [-Wunused-label]
copyLoop: for ( i = 0 ; i < dim ; i++){
^~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:58:1: warning: unused label 'initLoop' [-Wunused-label]
initLoop:       for ( k = 0 ; k < dim ; k ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:65:1: warning: unused label 'valueAsn' [-Wunused-label]
valueAsn:       for ( k = 0 ; k < dim ; k ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:87:1: warning: unused label 'zeroAsn' [-Wunused-label]
zeroAsn:        for ( l = 0 ;l < dim ; l ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:51:1: warning: unused label 'sizeLoop' [-Wunused-label]
sizeLoop:
^~~~~~~~~
Performing accelerator source linting for myFuncAccel
Performing pragma generation
INFO: [PragmaGen 83-3231] Successfully generated tcl script: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/vhls/myFuncAccel.tcl
Moving function myFuncAccel to Programmable Logic
sdscc log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds_myAccel.log

Finished building: ../src/myAccel.c
 
Building target: Algo_4.elf
Invoking: SDS++ Linker
sds++ --remote_ip_cache /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/ip_cache -o "Algo_4.elf"  ./src/main.o ./src/myAccel.o    -dmclkid 2  -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Analyzing object files
... /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/src/main.o
... /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/src/myAccel.o
Generating data motion network
INFO: [DMAnalysis 83-4494] Analyzing hardware accelerators...
INFO: [DMAnalysis 83-4497] Analyzing callers to hardware accelerators...
INFO: [DMAnalysis 83-4444] Scheduling data transfer graph for partition 0
INFO: [DMAnalysis 83-4446] Creating data motion network hardware for partition 0
INFO: [DMAnalysis 83-4448] Creating software stub functions for partition 0
INFO: [DMAnalysis 83-4450] Generating data motion network report for partition 0
INFO: [DMAnalysis 83-4454] Rewriting caller code
Creating block diagram (BD)
Creating top.bd.tcl
Rewrite caller functions
Compile caller rewrite file /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/swstubs/main.c
Prepare hardware access API functions
Create accelerator stub functions
Compile hardware access API functions
Compile accelerator stub functions
myAccel.c: In function ‘myFuncAccel’:
myAccel.c:87:1: warning: label ‘zeroAsn’ defined but not used [-Wunused-label]
 zeroAsn: for ( l = 0 ;l < dim ; l ++ )
 ^~~~~~~
myAccel.c:65:1: warning: label ‘valueAsn’ defined but not used [-Wunused-label]
 valueAsn: for ( k = 0 ; k < dim ; k ++ )
 ^~~~~~~~
myAccel.c:58:1: warning: label ‘initLoop’ defined but not used [-Wunused-label]
 initLoop: for ( k = 0 ; k < dim ; k ++ )
 ^~~~~~~~
myAccel.c:51:1: warning: label ‘sizeLoop’ defined but not used [-Wunused-label]
 sizeLoop:
 ^~~~~~~~
myAccel.c:42:1: warning: label ‘copyLoop’ defined but not used [-Wunused-label]
 copyLoop: for ( i = 0 ; i < dim ; i++){
 ^~~~~~~~
Preliminary link application ELF
Enable generation of hardware programming files
Enable generation of boot files
Calling VPL

****** vpl v2018.3 (64-bit)
  **** SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
    ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

Attempting to get a license: ap_opencl
Feature available: ap_opencl
INFO: [VPL 60-895]   Target platform: /toolsViv/Xilinx/SDx/2018.3/platforms/zed/zed.xpfm
INFO: [VPL 60-423]   Target device: zed
INFO: [VPL 60-1032] Extracting DSA to /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vivado/.local/dsa
INFO: [VPL 60-251]   Hardware accelerator integration...
Creating Vivado project and starting FPGA synthesis.
[00:19:58] Block-level synthesis in progress, 0 of 1 jobs complete, 1 job running.
[00:20:58] Block-level synthesis in progress, 1 of 1 jobs complete, 0 jobs running.
[00:21:58] Top-level synthesis in progress.
[00:23:14] Finished 2nd of 6 tasks (FPGA linking synthesized kernels to platform). Elapsed time: 00h 07m 34s 

[00:23:14] Starting logic optimization..
[00:23:24] Phase 1 Retarget
[00:23:24] Phase 2 Constant propagation
[00:23:24] Phase 3 Sweep
[00:23:24] Phase 4 BUFG optimization
[00:23:29] Phase 5 Shift Register Optimization
[00:23:29] Phase 6 Post Processing Netlist
[00:23:55] Finished 3rd of 6 tasks (FPGA logic optimization). Elapsed time: 00h 00m 40s 

[00:23:55] Starting logic placement..
[00:23:55] Phase 1 Placer Initialization
[00:23:55] Phase 1.1 Placer Initialization Netlist Sorting
[00:23:55] Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
[00:24:00] Phase 1.3 Build Placer Netlist Model
[00:24:10] Phase 1.4 Constrain Clocks/Macros
[00:24:10] Phase 2 Global Placement
[00:24:10] Phase 2.1 Floorplanning
[00:24:31] Phase 2.2 Physical Synthesis In Placer
[00:24:36] Phase 3 Detail Placement
[00:24:36] Phase 3.1 Commit Multi Column Macros
[00:24:41] Phase 3.2 Commit Most Macros & LUTRAMs
[00:24:41] Phase 3.3 Area Swap Optimization
[00:24:41] Phase 3.4 Pipeline Register Optimization
[00:24:41] Phase 3.5 Small Shape Detail Placement
[00:24:51] Phase 3.6 Re-assign LUT pins
[00:24:51] Phase 3.7 Pipeline Register Optimization
[00:24:51] Phase 4 Post Placement Optimization and Clean-Up
[00:24:51] Phase 4.1 Post Commit Optimization
[00:24:56] Phase 4.1.1 Post Placement Optimization
[00:24:56] Phase 4.1.1.1 BUFG Insertion
[00:24:56] Phase 4.2 Post Placement Cleanup
[00:24:56] Phase 4.3 Placer Reporting
[00:24:56] Phase 4.4 Final Placement Cleanup
[00:25:01] Finished 4th of 6 tasks (FPGA logic placement). Elapsed time: 00h 01m 06s 

[00:25:01] Starting logic routing..
[00:25:07] Phase 1 Build RT Design
[00:25:37] Phase 2 Router Initialization
[00:25:37] Phase 2.1 Create Timer
[00:25:37] Phase 2.2 Fix Topology Constraints
[00:25:37] Phase 2.3 Pre Route Cleanup
[00:25:37] Phase 2.4 Update Timing
[00:25:48] Phase 3 Initial Routing
[00:25:48] Phase 4 Rip-up And Reroute
[00:25:48] Phase 4.1 Global Iteration 0
[00:26:08] Phase 4.2 Global Iteration 1
[00:26:08] Phase 5 Delay and Skew Optimization
[00:26:08] Phase 5.1 Delay CleanUp
[00:26:08] Phase 5.1.1 Update Timing
[00:26:08] Phase 5.2 Clock Skew Optimization
[00:26:08] Phase 6 Post Hold Fix
[00:26:08] Phase 6.1 Hold Fix Iter
[00:26:08] Phase 6.1.1 Update Timing
[00:26:13] Phase 7 Route finalize
[00:26:13] Phase 8 Verifying routed nets
[00:26:13] Phase 9 Depositing Routes
[00:26:13] Phase 10 Post Router Timing
[00:26:13] Finished 5th of 6 tasks (FPGA routing). Elapsed time: 00h 01m 11s 

[00:26:13] Starting bitstream generation..
[00:27:21] Creating bitmap...
[00:27:41] Writing bitstream ./zed_wrapper.bit...
[00:27:41] Finished 6th of 6 tasks (FPGA bitstream generation). Elapsed time: 00h 01m 28s 

INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/address_map.xml
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/_new_clk_freq
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/system.hdf
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/system.bit
Software tracing enabled
Compile hardware access API functions
Link application ELF file
SD card folder created /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/sd_card
All user specified timing constraints are met.
sds++ log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds.log

Finished building target: Algo_4.elf
 
00:55:11 **** Clean-only build of configuration Debug for project Algo_4 ****
make clean 
rm -rf _sds sd_card  ./src/main.o ./src/myAccel.o  ./src/main.d ./src/myAccel.d  Algo_4.elf
 
00:55:15 **** Build of configuration Debug for project Algo_4 ****
make pre-build main-build 
sdsoc_make_clean Debug
 
Building file: ../src/main.c
Invoking: SDSCC Compiler
sdscc -Wall -O0 -g -I"../src" -c -fmessage-length=0 -MT"src/main.o" -MMD -MP -MF"src/main.d" -MT"src/main.o" -o "src/main.o" "../src/main.c" -sds-hw myFuncAccel myAccel.c  -clkid 2 -sds-end -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Analyzing source for RTL template usage
Create data motion intermediate representation
Compiling /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/main.c
sdscc log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds_main.log

Finished building: ../src/main.c
 
Building file: ../src/myAccel.c
Invoking: SDSCC Compiler
sdscc -Wall -O0 -g -I"../src" -c -fmessage-length=0 -MT"src/myAccel.o" -MMD -MP -MF"src/myAccel.d" -MT"src/myAccel.o" -o "src/myAccel.o" "../src/myAccel.c" -sds-hw myFuncAccel myAccel.c  -clkid 2 -sds-end -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Processing -sds-hw block for myFuncAccel
Analyzing source for RTL template usage
Create data motion intermediate representation
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:43:1: warning: unused label 'copyLoop' [-Wunused-label]
copyLoop: for ( i = 0 ; i < dim ; i++){
^~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:59:1: warning: unused label 'initLoop' [-Wunused-label]
initLoop:       for ( k = 0 ; k < dim ; k ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:66:1: warning: unused label 'valueAsn' [-Wunused-label]
valueAsn:       for ( k = 0 ; k < dim ; k ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:88:1: warning: unused label 'zeroAsn' [-Wunused-label]
zeroAsn:        for ( l = 0 ;l < dim ; l ++ )
^~~~~~~~~~~~~~~~
/home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/src/myAccel.c:52:1: warning: unused label 'sizeLoop' [-Wunused-label]
sizeLoop:
^~~~~~~~~
Performing accelerator source linting for myFuncAccel
Performing pragma generation
INFO: [PragmaGen 83-3231] Successfully generated tcl script: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/vhls/myFuncAccel.tcl
Moving function myFuncAccel to Programmable Logic
sdscc log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds_myAccel.log

Finished building: ../src/myAccel.c
 
Building target: Algo_4.elf
Invoking: SDS++ Linker
sds++ --remote_ip_cache /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/ip_cache -o "Algo_4.elf"  ./src/main.o ./src/myAccel.o    -dmclkid 2  -sds-sys-config linux -sds-proc linux -sds-pf "zed"
Analyzing object files
... /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/src/main.o
... /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/src/myAccel.o
Generating data motion network
INFO: [DMAnalysis 83-4494] Analyzing hardware accelerators...
INFO: [DMAnalysis 83-4497] Analyzing callers to hardware accelerators...
INFO: [DMAnalysis 83-4444] Scheduling data transfer graph for partition 0
INFO: [DMAnalysis 83-4446] Creating data motion network hardware for partition 0
INFO: [DMAnalysis 83-4448] Creating software stub functions for partition 0
INFO: [DMAnalysis 83-4450] Generating data motion network report for partition 0
INFO: [DMAnalysis 83-4454] Rewriting caller code
Creating block diagram (BD)
Creating top.bd.tcl
Rewrite caller functions
Compile caller rewrite file /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/swstubs/main.c
Prepare hardware access API functions
Create accelerator stub functions
Compile hardware access API functions
Compile accelerator stub functions
myAccel.c: In function ‘myFuncAccel’:
myAccel.c:88:1: warning: label ‘zeroAsn’ defined but not used [-Wunused-label]
 zeroAsn: for ( l = 0 ;l < dim ; l ++ )
 ^~~~~~~
myAccel.c:66:1: warning: label ‘valueAsn’ defined but not used [-Wunused-label]
 valueAsn: for ( k = 0 ; k < dim ; k ++ )
 ^~~~~~~~
myAccel.c:59:1: warning: label ‘initLoop’ defined but not used [-Wunused-label]
 initLoop: for ( k = 0 ; k < dim ; k ++ )
 ^~~~~~~~
myAccel.c:52:1: warning: label ‘sizeLoop’ defined but not used [-Wunused-label]
 sizeLoop:
 ^~~~~~~~
myAccel.c:43:1: warning: label ‘copyLoop’ defined but not used [-Wunused-label]
 copyLoop: for ( i = 0 ; i < dim ; i++){
 ^~~~~~~~
Preliminary link application ELF
Enable generation of hardware programming files
Enable generation of boot files
Calling VPL

****** vpl v2018.3 (64-bit)
  **** SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
    ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

Attempting to get a license: ap_opencl
Feature available: ap_opencl
INFO: [VPL 60-895]   Target platform: /toolsViv/Xilinx/SDx/2018.3/platforms/zed/zed.xpfm
INFO: [VPL 60-423]   Target device: zed
INFO: [VPL 60-1032] Extracting DSA to /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vivado/.local/dsa
INFO: [VPL 60-251]   Hardware accelerator integration...
Creating Vivado project and starting FPGA synthesis.
[01:00:32] Block-level synthesis in progress, 1 of 8 jobs complete, 1 job running.
[01:01:32] Block-level synthesis in progress, 2 of 8 jobs complete, 2 jobs running.
[01:02:32] Block-level synthesis in progress, 2 of 8 jobs complete, 2 jobs running.
[01:03:32] Block-level synthesis in progress, 5 of 8 jobs complete, 2 jobs running.
[01:04:32] Block-level synthesis in progress, 5 of 8 jobs complete, 2 jobs running.
[01:05:32] Top-level synthesis in progress.
[01:06:58] Finished 2nd of 6 tasks (FPGA linking synthesized kernels to platform). Elapsed time: 00h 10m 39s 

[01:06:58] Starting logic optimization..
[01:06:58] Phase 1 Retarget
[01:07:03] Phase 2 Constant propagation
[01:07:03] Phase 3 Sweep
[01:07:03] Phase 4 BUFG optimization
[01:07:03] Phase 5 Shift Register Optimization
[01:07:09] Phase 6 Post Processing Netlist
[01:07:29] Finished 3rd of 6 tasks (FPGA logic optimization). Elapsed time: 00h 00m 31s 

[01:07:29] Starting logic placement..
[01:07:29] Phase 1 Placer Initialization
[01:07:29] Phase 1.1 Placer Initialization Netlist Sorting
[01:07:29] Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
[01:07:35] Phase 1.3 Build Placer Netlist Model
[01:07:40] Phase 1.4 Constrain Clocks/Macros
[01:07:40] Phase 2 Global Placement
[01:07:40] Phase 2.1 Floorplanning
[01:08:00] Phase 2.2 Physical Synthesis In Placer
[01:08:05] Phase 3 Detail Placement
[01:08:05] Phase 3.1 Commit Multi Column Macros
[01:08:05] Phase 3.2 Commit Most Macros & LUTRAMs
[01:08:05] Phase 3.3 Area Swap Optimization
[01:08:05] Phase 3.4 Pipeline Register Optimization
[01:08:05] Phase 3.5 Small Shape Detail Placement
[01:08:16] Phase 3.6 Re-assign LUT pins
[01:08:16] Phase 3.7 Pipeline Register Optimization
[01:08:16] Phase 4 Post Placement Optimization and Clean-Up
[01:08:16] Phase 4.1 Post Commit Optimization
[01:08:21] Phase 4.1.1 Post Placement Optimization
[01:08:21] Phase 4.1.1.1 BUFG Insertion
[01:08:21] Phase 4.2 Post Placement Cleanup
[01:08:26] Finished 4th of 6 tasks (FPGA logic placement). Elapsed time: 00h 00m 56s 

[01:08:26] Starting logic routing..
[01:08:26] Phase 4.3 Placer Reporting
[01:08:26] Phase 4.4 Final Placement Cleanup
[01:08:31] Phase 1 Build RT Design
[01:08:57] Phase 2 Router Initialization
[01:08:57] Phase 2.1 Create Timer
[01:08:57] Phase 2.2 Fix Topology Constraints
[01:08:57] Phase 2.3 Pre Route Cleanup
[01:08:57] Phase 2.4 Update Timing
[01:09:07] Phase 3 Initial Routing
[01:09:07] Phase 4 Rip-up And Reroute
[01:09:07] Phase 4.1 Global Iteration 0
[01:09:18] Phase 4.2 Global Iteration 1
[01:09:23] Phase 5 Delay and Skew Optimization
[01:09:23] Phase 5.1 Delay CleanUp
[01:09:23] Phase 5.2 Clock Skew Optimization
[01:09:23] Phase 6 Post Hold Fix
[01:09:23] Phase 6.1 Hold Fix Iter
[01:09:23] Phase 6.1.1 Update Timing
[01:09:23] Phase 7 Route finalize
[01:09:23] Phase 8 Verifying routed nets
[01:09:23] Phase 9 Depositing Routes
[01:09:23] Phase 10 Post Router Timing
[01:09:23] Finished 5th of 6 tasks (FPGA routing). Elapsed time: 00h 00m 56s 

[01:09:23] Starting bitstream generation..
[01:10:15] Creating bitmap...
[01:10:30] Writing bitstream ./zed_wrapper.bit...
[01:10:30] Finished 6th of 6 tasks (FPGA bitstream generation). Elapsed time: 00h 01m 07s 

INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/address_map.xml
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/_new_clk_freq
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/system.hdf
INFO: [VPL 60-841] Created output file: /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/p0/vpl/system.bit
Software tracing enabled
Compile hardware access API functions
Link application ELF file
SD card folder created /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/sd_card
All user specified timing constraints are met.
sds++ log file saved as /home/skalogerakis/TUC_Projects/TUC_HLS/MyCode/MIlestone3/SDSOC_Accel/Algo_4/Debug/_sds/reports/sds.log

Finished building target: Algo_4.elf
 
